generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  name      String
  username  String @unique
  email     String @unique
  password  String
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions  Session[]
  favorites Favorite[]
  receipts   Receipt[]
}

model Session {
  id        String @id @default(uuid())
  createdAt DateTime @default(now())

  userId    String
  user User @relation(fields: [userId], references: [id])
}

model Receipt {
  id          String @id @default(uuid())
  title       String
  description String?
  cookingTime Int 
  servings    Int
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  userId      String
  user User @relation(fields: [userId], references: [id])

  instructions  Instruction[]
  ingredients   ReceiptIngredient[]
  categories    ReceiptCategory[]
  favorites     Favorite[]
}

model Ingredient {
  id         String   @id @default(uuid())
  name       String   @unique
  imageUrl   String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  reciepts ReceiptIngredient[]
}

model ReceiptIngredient {
  id            String   @id @default(uuid())
  quantity      Float
  unit          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  receiptId      String
  receipt Receipt @relation(fields: [receiptId], references: [id])

  ingredientId  String
  ingredient Ingredient @relation(fields: [ingredientId], references: [id])

  @@index([receiptId, ingredientId])
}

model Instruction {
  id         String   @id @default(uuid())
  stepNumber Int
  text       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  receiptId   String
  receipt Receipt @relation(fields: [receiptId], references: [id])
}

model Category {
  id         String   @id @default(uuid())
  name       String   @unique
  imageUrl   String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  receipts ReceiptCategory[]
}

model ReceiptCategory {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  receiptId   String
  receipt     Receipt   @relation(fields: [receiptId], references: [id])
  
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  @@index([receiptId, categoryId])
}

model Favorite {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  
  receiptId   String
  receipt     Receipt   @relation(fields: [receiptId], references: [id])
}